import type { NodeType } from '.';
export declare const ARAZZO_ROOT_TYPE = "Root";
export declare const arazzoSchema: {
    readonly type: "object";
    readonly properties: {
        readonly arazzo: {
            readonly type: "string";
            readonly enum: readonly ["1.0.0"];
        };
        readonly info: {
            readonly type: "object";
            readonly properties: {
                readonly title: {
                    readonly type: "string";
                };
                readonly description: {
                    readonly type: "string";
                };
                readonly summary: {
                    readonly type: "string";
                };
                readonly version: {
                    readonly type: "string";
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["title", "version"];
        };
        readonly sourceDescriptions: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["openapi"];
                        };
                        readonly url: {
                            readonly type: "string";
                        };
                        readonly 'x-serverUrl': {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["name", "type", "url"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["none"];
                        };
                        readonly 'x-serverUrl': {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["name", "type", "x-serverUrl"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["arazzo"];
                        };
                        readonly url: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["name", "type", "url"];
                }];
            };
        };
        readonly 'x-parameters': {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly in: {
                            readonly type: "string";
                            readonly enum: readonly ["header", "query", "path", "cookie", "body"];
                        };
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly value: {
                            readonly oneOf: readonly [{
                                readonly type: "string";
                            }, {
                                readonly type: "number";
                            }, {
                                readonly type: "boolean";
                            }];
                        };
                    };
                    readonly required: readonly ["name", "value"];
                    readonly additionalProperties: false;
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly $ref: {
                            readonly type: "string";
                        };
                        readonly value: {
                            readonly oneOf: readonly [{
                                readonly type: "string";
                            }, {
                                readonly type: "number";
                            }, {
                                readonly type: "boolean";
                            }];
                        };
                    };
                    readonly required: readonly ["$ref"];
                    readonly additionalProperties: false;
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly reference: {
                            readonly type: "string";
                        };
                        readonly value: {
                            readonly oneOf: readonly [{
                                readonly type: "string";
                            }, {
                                readonly type: "number";
                            }, {
                                readonly type: "boolean";
                            }];
                        };
                    };
                    readonly required: readonly ["reference"];
                    readonly additionalProperties: false;
                }];
            };
        };
        readonly workflows: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly workflowId: {
                        readonly type: "string";
                    };
                    readonly summary: {
                        readonly type: "string";
                    };
                    readonly description: {
                        readonly type: "string";
                    };
                    readonly parameters: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly oneOf: readonly [{
                                readonly type: "object";
                                readonly properties: {
                                    readonly in: {
                                        readonly type: "string";
                                        readonly enum: readonly ["header", "query", "path", "cookie", "body"];
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly value: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "number";
                                        }, {
                                            readonly type: "boolean";
                                        }];
                                    };
                                };
                                readonly required: readonly ["name", "value"];
                                readonly additionalProperties: false;
                            }, {
                                readonly type: "object";
                                readonly properties: {
                                    readonly $ref: {
                                        readonly type: "string";
                                    };
                                    readonly value: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "number";
                                        }, {
                                            readonly type: "boolean";
                                        }];
                                    };
                                };
                                readonly required: readonly ["$ref"];
                                readonly additionalProperties: false;
                            }, {
                                readonly type: "object";
                                readonly properties: {
                                    readonly reference: {
                                        readonly type: "string";
                                    };
                                    readonly value: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "number";
                                        }, {
                                            readonly type: "boolean";
                                        }];
                                    };
                                };
                                readonly required: readonly ["reference"];
                                readonly additionalProperties: false;
                            }];
                        };
                    };
                    readonly dependsOn: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    };
                    readonly inputs: {
                        readonly type: "object";
                        readonly properties: {
                            readonly type: {
                                readonly type: "string";
                                readonly enum: readonly ["object", "array", "string", "number", "integer", "boolean", "null"];
                            };
                            readonly properties: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly required: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly items: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                        };
                        readonly required: readonly ["type"];
                        readonly additionalProperties: true;
                    };
                    readonly outputs: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "string";
                        };
                    };
                    readonly steps: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly stepId: {
                                    readonly type: "string";
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                                readonly operationId: {
                                    readonly type: "string";
                                };
                                readonly operationPath: {
                                    readonly type: "string";
                                };
                                readonly workflowId: {
                                    readonly type: "string";
                                };
                                readonly parameters: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly oneOf: readonly [{
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly in: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["header", "query", "path", "cookie", "body"];
                                                };
                                                readonly name: {
                                                    readonly type: "string";
                                                };
                                                readonly value: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "number";
                                                    }, {
                                                        readonly type: "boolean";
                                                    }];
                                                };
                                            };
                                            readonly required: readonly ["name", "value"];
                                            readonly additionalProperties: false;
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly $ref: {
                                                    readonly type: "string";
                                                };
                                                readonly value: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "number";
                                                    }, {
                                                        readonly type: "boolean";
                                                    }];
                                                };
                                            };
                                            readonly required: readonly ["$ref"];
                                            readonly additionalProperties: false;
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly reference: {
                                                    readonly type: "string";
                                                };
                                                readonly value: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "number";
                                                    }, {
                                                        readonly type: "boolean";
                                                    }];
                                                };
                                            };
                                            readonly required: readonly ["reference"];
                                            readonly additionalProperties: false;
                                        }];
                                    };
                                };
                                readonly successCriteria: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly condition: {
                                                readonly type: "string";
                                            };
                                            readonly context: {
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly oneOf: readonly [{
                                                    readonly type: "string";
                                                    readonly enum: readonly ["regex", "jsonpath", "simple", "xpath"];
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["jsonpath"];
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["draft-goessner-dispatch-jsonpath-00"];
                                                        };
                                                    };
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["xpath"];
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["xpath-30", "xpath-20", "xpath-10"];
                                                        };
                                                    };
                                                }];
                                            };
                                        };
                                        readonly required: readonly ["condition"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly onSuccess: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["goto", "end"];
                                            };
                                            readonly stepId: {
                                                readonly type: "string";
                                            };
                                            readonly workflowId: {
                                                readonly type: "string";
                                            };
                                            readonly criteria: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly condition: {
                                                            readonly type: "string";
                                                        };
                                                        readonly context: {
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly oneOf: readonly [{
                                                                readonly type: "string";
                                                                readonly enum: readonly ["regex", "jsonpath", "simple", "xpath"];
                                                            }, {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly type: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["jsonpath"];
                                                                    };
                                                                    readonly version: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["draft-goessner-dispatch-jsonpath-00"];
                                                                    };
                                                                };
                                                            }, {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly type: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["xpath"];
                                                                    };
                                                                    readonly version: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["xpath-30", "xpath-20", "xpath-10"];
                                                                    };
                                                                };
                                                            }];
                                                        };
                                                    };
                                                    readonly required: readonly ["condition"];
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "name"];
                                    };
                                };
                                readonly onFailure: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["goto", "retry", "end"];
                                            };
                                            readonly workflowId: {
                                                readonly type: "string";
                                            };
                                            readonly stepId: {
                                                readonly type: "string";
                                            };
                                            readonly retryAfter: {
                                                readonly type: "number";
                                            };
                                            readonly retryLimit: {
                                                readonly type: "number";
                                            };
                                            readonly criteria: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly condition: {
                                                            readonly type: "string";
                                                        };
                                                        readonly context: {
                                                            readonly type: "string";
                                                        };
                                                        readonly type: {
                                                            readonly oneOf: readonly [{
                                                                readonly type: "string";
                                                                readonly enum: readonly ["regex", "jsonpath", "simple", "xpath"];
                                                            }, {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly type: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["jsonpath"];
                                                                    };
                                                                    readonly version: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["draft-goessner-dispatch-jsonpath-00"];
                                                                    };
                                                                };
                                                            }, {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly type: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["xpath"];
                                                                    };
                                                                    readonly version: {
                                                                        readonly type: "string";
                                                                        readonly enum: readonly ["xpath-30", "xpath-20", "xpath-10"];
                                                                    };
                                                                };
                                                            }];
                                                        };
                                                    };
                                                    readonly required: readonly ["condition"];
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "name"];
                                    };
                                };
                                readonly outputs: {
                                    readonly type: "object";
                                    readonly additionalProperties: {
                                        readonly type: "string";
                                    };
                                };
                                readonly 'x-inherit': {
                                    readonly type: "string";
                                    readonly enum: readonly ["auto", "none"];
                                };
                                readonly 'x-expect': {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly statusCode: {
                                            readonly type: "number";
                                        };
                                        readonly mimeType: {
                                            readonly type: "string";
                                        };
                                        readonly body: {};
                                        readonly schema: {
                                            readonly type: "object";
                                            readonly additionalProperties: true;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                    readonly oneOf: readonly [{
                                        readonly required: readonly ["statusCode"];
                                    }, {
                                        readonly required: readonly ["mimeType"];
                                    }, {
                                        readonly required: readonly ["body"];
                                    }, {
                                        readonly required: readonly ["schema"];
                                    }];
                                };
                                readonly 'x-assert': {
                                    readonly type: "string";
                                };
                                readonly 'x-operation': {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly path: {
                                            readonly type: "string";
                                        };
                                        readonly method: {
                                            readonly type: "string";
                                            readonly enum: readonly ["get", "post", "put", "delete", "patch"];
                                        };
                                        readonly sourceDescriptionName: {
                                            readonly type: "string";
                                        };
                                        readonly serverUrl: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                    readonly required: readonly ["path", "method"];
                                };
                                readonly requestBody: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly contentType: {
                                            readonly type: "string";
                                        };
                                        readonly payload: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                            }, {
                                                readonly type: "object";
                                                readonly additionalProperties: true;
                                            }, {
                                                readonly type: "array";
                                            }, {
                                                readonly type: "number";
                                            }, {
                                                readonly type: "boolean";
                                            }];
                                        };
                                        readonly encoding: {
                                            readonly type: "string";
                                        };
                                        readonly replacements: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly target: {
                                                        readonly type: "string";
                                                    };
                                                    readonly value: {
                                                        readonly oneOf: readonly [{
                                                            readonly type: "string";
                                                        }, {
                                                            readonly type: "object";
                                                        }, {
                                                            readonly type: "array";
                                                        }, {
                                                            readonly type: "number";
                                                        }, {
                                                            readonly type: "boolean";
                                                        }];
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                    readonly required: readonly ["payload"];
                                };
                            };
                            readonly required: readonly ["stepId"];
                            readonly oneOf: readonly [{
                                readonly required: readonly ["x-operation"];
                            }, {
                                readonly required: readonly ["operationId"];
                            }, {
                                readonly required: readonly ["operationPath"];
                            }, {
                                readonly required: readonly ["workflowId"];
                            }];
                        };
                    };
                    readonly successActions: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["goto", "end"];
                                };
                                readonly stepId: {
                                    readonly type: "string";
                                };
                                readonly workflowId: {
                                    readonly type: "string";
                                };
                                readonly criteria: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly condition: {
                                                readonly type: "string";
                                            };
                                            readonly context: {
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly oneOf: readonly [{
                                                    readonly type: "string";
                                                    readonly enum: readonly ["regex", "jsonpath", "simple", "xpath"];
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["jsonpath"];
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["draft-goessner-dispatch-jsonpath-00"];
                                                        };
                                                    };
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["xpath"];
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["xpath-30", "xpath-20", "xpath-10"];
                                                        };
                                                    };
                                                }];
                                            };
                                        };
                                        readonly required: readonly ["condition"];
                                        readonly additionalProperties: false;
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "name"];
                        };
                    };
                    readonly failureActions: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["goto", "retry", "end"];
                                };
                                readonly workflowId: {
                                    readonly type: "string";
                                };
                                readonly stepId: {
                                    readonly type: "string";
                                };
                                readonly retryAfter: {
                                    readonly type: "number";
                                };
                                readonly retryLimit: {
                                    readonly type: "number";
                                };
                                readonly criteria: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly condition: {
                                                readonly type: "string";
                                            };
                                            readonly context: {
                                                readonly type: "string";
                                            };
                                            readonly type: {
                                                readonly oneOf: readonly [{
                                                    readonly type: "string";
                                                    readonly enum: readonly ["regex", "jsonpath", "simple", "xpath"];
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["jsonpath"];
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["draft-goessner-dispatch-jsonpath-00"];
                                                        };
                                                    };
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly type: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["xpath"];
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["xpath-30", "xpath-20", "xpath-10"];
                                                        };
                                                    };
                                                }];
                                            };
                                        };
                                        readonly required: readonly ["condition"];
                                        readonly additionalProperties: false;
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "name"];
                        };
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["workflowId", "steps"];
            };
        };
        readonly components: {
            readonly type: "object";
            readonly properties: {
                readonly inputs: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                        readonly properties: {
                            readonly type: {
                                readonly type: "string";
                            };
                            readonly properties: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                        };
                        readonly required: readonly ["type"];
                    };
                };
                readonly parameters: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly oneOf: readonly [{
                            readonly type: "object";
                            readonly properties: {
                                readonly in: {
                                    readonly type: "string";
                                    readonly enum: readonly ["header", "query", "path", "cookie", "body"];
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly value: {
                                    readonly oneOf: readonly [{
                                        readonly type: "string";
                                    }, {
                                        readonly type: "number";
                                    }, {
                                        readonly type: "boolean";
                                    }];
                                };
                            };
                            readonly required: readonly ["name", "value"];
                            readonly additionalProperties: false;
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly $ref: {
                                    readonly type: "string";
                                };
                                readonly value: {
                                    readonly oneOf: readonly [{
                                        readonly type: "string";
                                    }, {
                                        readonly type: "number";
                                    }, {
                                        readonly type: "boolean";
                                    }];
                                };
                            };
                            readonly required: readonly ["$ref"];
                            readonly additionalProperties: false;
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly reference: {
                                    readonly type: "string";
                                };
                                readonly value: {
                                    readonly oneOf: readonly [{
                                        readonly type: "string";
                                    }, {
                                        readonly type: "number";
                                    }, {
                                        readonly type: "boolean";
                                    }];
                                };
                            };
                            readonly required: readonly ["reference"];
                            readonly additionalProperties: false;
                        }];
                    };
                };
                readonly successActions: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly type: {
                                readonly type: "string";
                                readonly enum: readonly ["goto", "end"];
                            };
                            readonly stepId: {
                                readonly type: "string";
                            };
                            readonly workflowId: {
                                readonly type: "string";
                            };
                            readonly criteria: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly condition: {
                                            readonly type: "string";
                                        };
                                        readonly context: {
                                            readonly type: "string";
                                        };
                                        readonly type: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                                readonly enum: readonly ["regex", "jsonpath", "simple", "xpath"];
                                            }, {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly type: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["jsonpath"];
                                                    };
                                                    readonly version: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["draft-goessner-dispatch-jsonpath-00"];
                                                    };
                                                };
                                            }, {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly type: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["xpath"];
                                                    };
                                                    readonly version: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["xpath-30", "xpath-20", "xpath-10"];
                                                    };
                                                };
                                            }];
                                        };
                                    };
                                    readonly required: readonly ["condition"];
                                    readonly additionalProperties: false;
                                };
                            };
                        };
                        readonly additionalProperties: false;
                        readonly required: readonly ["type", "name"];
                    };
                };
                readonly failureActions: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly type: {
                                readonly type: "string";
                                readonly enum: readonly ["goto", "retry", "end"];
                            };
                            readonly workflowId: {
                                readonly type: "string";
                            };
                            readonly stepId: {
                                readonly type: "string";
                            };
                            readonly retryAfter: {
                                readonly type: "number";
                            };
                            readonly retryLimit: {
                                readonly type: "number";
                            };
                            readonly criteria: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly condition: {
                                            readonly type: "string";
                                        };
                                        readonly context: {
                                            readonly type: "string";
                                        };
                                        readonly type: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                                readonly enum: readonly ["regex", "jsonpath", "simple", "xpath"];
                                            }, {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly type: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["jsonpath"];
                                                    };
                                                    readonly version: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["draft-goessner-dispatch-jsonpath-00"];
                                                    };
                                                };
                                            }, {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly type: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["xpath"];
                                                    };
                                                    readonly version: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["xpath-30", "xpath-20", "xpath-10"];
                                                    };
                                                };
                                            }];
                                        };
                                    };
                                    readonly required: readonly ["condition"];
                                    readonly additionalProperties: false;
                                };
                            };
                        };
                        readonly additionalProperties: false;
                        readonly required: readonly ["type", "name"];
                    };
                };
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["arazzo", "info", "sourceDescriptions", "workflows"];
};
export declare const ArazzoTypes: Record<string, NodeType>;
